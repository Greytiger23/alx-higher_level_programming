The ``4-print_square`` module
======================

Using ``print_square``
-------------------

Import module:
    >>> print_square = __import__(‘4- print_square’).print_square

Test print 0:
    >>> print_square(0)

Test first:
    >>> print_square(1)
    #
 
Test print 2:
    >>> print_square(2)
    ##
    ##

Test print 3:
    >>> print_square(3)
    ###
    ###
    ###

Test print 10:
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test negative:
    >>> print_square(-10)
    Traceback (most recent call last):
    …
   ValueError: size must be >= 0

Test float:
    >>> print_square(10.0)
    Traceback (most recent call last):
    …
    TypeError: size must be a int

Test string:
    >>> print_square(“foo”)
    Traceback (most recent call last):
    …
    TypeError: size must be int

Test none:
    >>> print_square(None)
    Traceback (most recent call last):
    …
    TypeError: size must be int

Test inf:
    >>> print_square(float(‘inf’))
    Traceback (most recent call last):
    …
    TypeError: size must be int

Test nan:
    >>> print_square(float(‘nan’))
    Traceback (most recent call last):
    …
    TypeError: size must be int

Test missing:
    >>> print_square(float(‘inf’))
    Traceback (most recent call last):
    …
    TypeError: print_square() missing position arg: ‘size’
